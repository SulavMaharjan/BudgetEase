@page "/trackTransaction"

@using BudgetEasee.Models
@using BudgetEasee.Services
@inject TransactionService TransactionService

<div class="container mt-5">
    <h3 class="text-center mb-4 text-primary">Track Transactions</h3>

    @if (inflowTransactions == null || outflowTransactions == null)
    {
        <p class="text-center text-secondary">Loading transactions...</p>
    }
    else
    {
        <div class="mb-5">
            <h4 class="text-success">Inflow (Credit)</h4>
            @if (inflowTransactions.Count == 0)
            {
                <p class="text-center text-muted">No inflow transactions found.</p>
            }
            else
            {
                <table class="table table-hover">
                    <thead class="bg-success text-white">
                        <tr>
                            <th>Source</th>
                            <th>Amount</th>
                            <th>Tag</th>
                            <th>Remarks</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in inflowTransactions)
                        {
                            <tr>
                                <td>@transaction.Source</td>
                                <td>@transaction.Amount</td>
                                <td>@transaction.Tag</td>
                                <td>@transaction.Remarks</td>
                                <td>@transaction.Date.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>

        <div class="mb-5">
            <h4 class="text-danger">Outflow (Debit)</h4>
            @if (outflowTransactions.Count == 0)
            {
                <p class="text-center text-muted">No outflow transactions found.</p>
            }
            else
            {
                <table class="table table-hover">
                    <thead class="bg-danger text-white">
                        <tr>
                            <th>Source</th>
                            <th>Amount</th>
                            <th>Tag</th>
                            <th>Remarks</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in outflowTransactions)
                        {
                            <tr>
                                <td>@transaction.Source</td>
                                <td>@transaction.Amount</td>
                                <td>@transaction.Tag</td>
                                <td>@transaction.Remarks</td>
                                <td>@transaction.Date.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    }

    <div class="text-center">
        <button class="btn btn-outline-primary btn-lg" @onclick="LoadTransactions">Refresh Transactions</button>
    </div>
</div>

@code {
    private List<BudgetEasee.Models.Transaction> inflowTransactions;
    private List<BudgetEasee.Models.Transaction> outflowTransactions;

    protected override async Task OnInitializedAsync()
    {
        await LoadTransactions();
    }

    private async Task LoadTransactions()
    {
        var allTransactions = await TransactionService.GetTransactionsAsync();

        inflowTransactions = allTransactions
            .Where(t => t.TransactionType == TransactionType.Credit)
            .ToList();

        outflowTransactions = allTransactions
            .Where(t => t.TransactionType == TransactionType.Debit)
            .ToList();

        StateHasChanged(); // Refresh the page
    }
}
