@page "/"
@layout BudgetEase.Components.Layout.EmptyLayout
@using BudgetEasee.Models
@using BudgetEasee.Services
@inject UserService UserService
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card p-4 shadow-lg" style="max-width: 400px; width: 100%;">
        <h3 class="text-center mb-4">Login</h3>

        @if (loginFailed)
        {
            <div class="alert alert-danger" role="alert">
                Invalid username or password. Please try again.
            </div>
        }

        <form @onsubmit="HandleLogin">
            <div class="mb-3">
                <label class="form-label" for="username">Username</label>
                <input type="text" class="form-control" id="username" @bind="Username" required />
            </div>

            <div class="mb-3">
                <label class="form-label" for="password">Password</label>
                <input type="password" class="form-control" id="password" @bind="Password" required />
            </div>

            <button type="submit" class="btn btn-primary w-100">Login</button>

            <div class="text-center mt-3">
                <a href="/signup" class="text-muted">Don't have an account? Sign up</a>
            </div>
        </form>
    </div>
</div>

@code {
    private string Username { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private bool loginFailed;

    private async Task HandleLogin()
    {
        var user = await UserService.LoginUserAsync(Username, Password);
        if (user == null)
        {
            loginFailed = true;
        }
        else
        {
            loginFailed = false;
            // Store or use the preferred currency
            var preferredCurrency = user.PreferredCurrency;
            // Redirect to home page or dashboard
            NavigationManager.NavigateTo("/dashboard");
        }
    }
}
